{"version":3,"sources":["demo.css","demo/_colors.scss","demo/_settings.scss"],"names":[],"mappings":"AAAA,0CAA0C;ACmHtC;EAGI,eAnBuC,EAwB1C;EDxHH,0CAA0C;ECgHvC;IAMO,eAtBmC,EAuBtC;;ADnHT,0CAA0C;ACsHtC;EA3HA,qCAAmC;EACnC,eCFW;EDIX;;;;;;;OAOG,EAqHF;;AD7GL,0CAA0C;AC+FtC;EAGI,eAnBuC,EAwB1C;EDpGH,0CAA0C;EC4FvC;IAMO,eAtBmC,EAuBtC;;AD/FT,0CAA0C;ACkGtC;EA3HA,qCAAmC;EACnC,eCFW;EDIX;;;;;;;OAOG,EAqHF;;ADzFL,0CAA0C;AC2EtC;EAGI,eAnBuC,EAwB1C;EDhFH,0CAA0C;ECwEvC;IAMO,eAtBmC,EAuBtC;;AD3ET,0CAA0C;AC8EtC;EA3HA,qCAAmC;EACnC,eCFW;EDIX;;;;;;;OAOG,EAqHF;;ADrEL,0CAA0C;ACuDtC;EAGI,eAnBuC,EAwB1C;ED5DH,0CAA0C;ECoDvC;IAMO,eAtBmC,EAuBtC;;ADvDT,0CAA0C;AC0DtC;EA3HA,qCAAmC;EACnC,eCFW;EDIX;;;;;;;OAOG,EAqHF;;ADjDL,0CAA0C;ACmCtC;EAGI,eAnBuC,EAwB1C;EDxCH,0CAA0C;ECgCvC;IAMO,eAtBmC,EAuBtC;;ADnCT,0CAA0C;ACsCtC;EA3HA,qCAAmC;EACnC,eCFW;EDIX;;;;;;;OAOG,EAqHF;;AD7BL,0CAA0C;ACetC;EAGI,eAnBuC,EAwB1C;EDpBH,0CAA0C;ECYvC;IAMO,eAtBmC,EAuBtC;;ADfT,0CAA0C;ACkBtC;EA3HA,qCAAmC;EACnC,eCFW;EDIX;;;;;;;OAOG,EAqHF;;ADTL,0CAA0C;ACLtC;EAGI,eAnBuC,EAwB1C;EDAH,0CAA0C;ECRvC;IAMO,eAtBmC,EAuBtC;;ADKT,0CAA0C;ACFtC;EA3HA,qCAAmC;EACnC,eCFW;EDIX;;;;;;;OAOG,EAqHF;;ADWL,0CAA0C;ACzBtC;EAGI,aAnBuC,EAwB1C;EDoBH,0CAA0C;EC5BvC;IAMO,aAtBmC,EAuBtC;;ADyBT,0CAA0C;ACtBtC;EA3HA,mCAAmC;EACnC,eCFW;EDIX;;;;;;;OAOG,EAqHF;;AD+BL,0CAA0C;AC7CtC;EAGI,aAnBuC,EAwB1C;EDwCH,0CAA0C;EChDvC;IAMO,aAtBmC,EAuBtC;;AD6CT,0CAA0C;AC1CtC;EA3HA,mCAAmC;EACnC,2BCsC6B;EDpC7B;;;;;;;OAOG,EAqHF;;ADmDL,0CAA0C;ACjEtC;EAGI,eAnBuC,EAwB1C;ED4DH,0CAA0C;ECpEvC;IAMO,eAtBmC,EAuBtC;;ADiET,0CAA0C;AC9DtC;EA3HA,qCAAmC;EACnC,2BCsC6B;EDpC7B;;;;;;;OAOG,EAqHF","file":"demo.css","sourcesContent":["/* line 116, src/scss/demo/_colors.scss */\n.text-primary {\n  color: #1779ba; }\n  /* line 121, src/scss/demo/_colors.scss */\n  .text-primary a {\n    color: #1779ba; }\n\n/* line 126, src/scss/demo/_colors.scss */\n.primary {\n  background-color: #1779ba !important;\n  color: #ffffff;\n  /*a:not(.button) {\r\n        color: currentColor;\r\n\r\n        &:hover, &:active, &:focus {\r\n            background: fade-out(foreground($color), .5);\r\n            color: invert(foreground($color));\r\n        }\r\n    }*/ }\n\n/* line 116, src/scss/demo/_colors.scss */\n.text-secondary {\n  color: #767676; }\n  /* line 121, src/scss/demo/_colors.scss */\n  .text-secondary a {\n    color: #767676; }\n\n/* line 126, src/scss/demo/_colors.scss */\n.secondary {\n  background-color: #767676 !important;\n  color: #ffffff;\n  /*a:not(.button) {\r\n        color: currentColor;\r\n\r\n        &:hover, &:active, &:focus {\r\n            background: fade-out(foreground($color), .5);\r\n            color: invert(foreground($color));\r\n        }\r\n    }*/ }\n\n/* line 116, src/scss/demo/_colors.scss */\n.text-success {\n  color: #3adb76; }\n  /* line 121, src/scss/demo/_colors.scss */\n  .text-success a {\n    color: #3adb76; }\n\n/* line 126, src/scss/demo/_colors.scss */\n.success {\n  background-color: #3adb76 !important;\n  color: #ffffff;\n  /*a:not(.button) {\r\n        color: currentColor;\r\n\r\n        &:hover, &:active, &:focus {\r\n            background: fade-out(foreground($color), .5);\r\n            color: invert(foreground($color));\r\n        }\r\n    }*/ }\n\n/* line 116, src/scss/demo/_colors.scss */\n.text-alert {\n  color: #cc4b37; }\n  /* line 121, src/scss/demo/_colors.scss */\n  .text-alert a {\n    color: #cc4b37; }\n\n/* line 126, src/scss/demo/_colors.scss */\n.alert {\n  background-color: #cc4b37 !important;\n  color: #ffffff;\n  /*a:not(.button) {\r\n        color: currentColor;\r\n\r\n        &:hover, &:active, &:focus {\r\n            background: fade-out(foreground($color), .5);\r\n            color: invert(foreground($color));\r\n        }\r\n    }*/ }\n\n/* line 116, src/scss/demo/_colors.scss */\n.text-alternate {\n  color: #00b5ff; }\n  /* line 121, src/scss/demo/_colors.scss */\n  .text-alternate a {\n    color: #00b5ff; }\n\n/* line 126, src/scss/demo/_colors.scss */\n.alternate {\n  background-color: #00b5ff !important;\n  color: #ffffff;\n  /*a:not(.button) {\r\n        color: currentColor;\r\n\r\n        &:hover, &:active, &:focus {\r\n            background: fade-out(foreground($color), .5);\r\n            color: invert(foreground($color));\r\n        }\r\n    }*/ }\n\n/* line 116, src/scss/demo/_colors.scss */\n.text-accent {\n  color: #c54b4e; }\n  /* line 121, src/scss/demo/_colors.scss */\n  .text-accent a {\n    color: #c54b4e; }\n\n/* line 126, src/scss/demo/_colors.scss */\n.accent {\n  background-color: #c54b4e !important;\n  color: #ffffff;\n  /*a:not(.button) {\r\n        color: currentColor;\r\n\r\n        &:hover, &:active, &:focus {\r\n            background: fade-out(foreground($color), .5);\r\n            color: invert(foreground($color));\r\n        }\r\n    }*/ }\n\n/* line 116, src/scss/demo/_colors.scss */\n.text-warning {\n  color: #ffae00; }\n  /* line 121, src/scss/demo/_colors.scss */\n  .text-warning a {\n    color: #ffae00; }\n\n/* line 126, src/scss/demo/_colors.scss */\n.warning {\n  background-color: #ffae00 !important;\n  color: #ffffff;\n  /*a:not(.button) {\r\n        color: currentColor;\r\n\r\n        &:hover, &:active, &:focus {\r\n            background: fade-out(foreground($color), .5);\r\n            color: invert(foreground($color));\r\n        }\r\n    }*/ }\n\n/* line 116, src/scss/demo/_colors.scss */\n.text-black {\n  color: black; }\n  /* line 121, src/scss/demo/_colors.scss */\n  .text-black a {\n    color: black; }\n\n/* line 126, src/scss/demo/_colors.scss */\n.black {\n  background-color: black !important;\n  color: #ffffff;\n  /*a:not(.button) {\r\n        color: currentColor;\r\n\r\n        &:hover, &:active, &:focus {\r\n            background: fade-out(foreground($color), .5);\r\n            color: invert(foreground($color));\r\n        }\r\n    }*/ }\n\n/* line 116, src/scss/demo/_colors.scss */\n.text-white {\n  color: white; }\n  /* line 121, src/scss/demo/_colors.scss */\n  .text-white a {\n    color: white; }\n\n/* line 126, src/scss/demo/_colors.scss */\n.white {\n  background-color: white !important;\n  color: rgba(0, 0, 0, 0.75);\n  /*a:not(.button) {\r\n        color: currentColor;\r\n\r\n        &:hover, &:active, &:focus {\r\n            background: fade-out(foreground($color), .5);\r\n            color: invert(foreground($color));\r\n        }\r\n    }*/ }\n\n/* line 116, src/scss/demo/_colors.scss */\n.text-gray {\n  color: #cacaca; }\n  /* line 121, src/scss/demo/_colors.scss */\n  .text-gray a {\n    color: #cacaca; }\n\n/* line 126, src/scss/demo/_colors.scss */\n.gray {\n  background-color: #cacaca !important;\n  color: rgba(0, 0, 0, 0.75);\n  /*a:not(.button) {\r\n        color: currentColor;\r\n\r\n        &:hover, &:active, &:focus {\r\n            background: fade-out(foreground($color), .5);\r\n            color: invert(foreground($color));\r\n        }\r\n    }*/ }\n","// CSS color classes for demo.\r\n@mixin background($color) {\r\n    background-color: $color !important;\r\n    color: foreground($color);\r\n\r\n    /*a:not(.button) {\r\n        color: currentColor;\r\n\r\n        &:hover, &:active, &:focus {\r\n            background: fade-out(foreground($color), .5);\r\n            color: invert(foreground($color));\r\n        }\r\n    }*/\r\n}\r\n\r\n/// Checks the lightness of `$color`, and if it passes the `$threshold` of lightness, it returns the `$yes` color. Otherwise, it returns the `$no` color. Use this function to dynamically output a foreground color based on a given background color.\r\n///\r\n/// @param {Color} $color - Color to check the lightness of.\r\n/// @param {Color} $yes [$black] - Color to return if `$color` is light.\r\n/// @param {Color} $no [$white] - Color to return if `$color` is dark.\r\n/// @param {Percentage} $threshold [60%] - Threshold of lightness to check against.\r\n///\r\n/// @returns {Color} The $yes color or $no color.\r\n@function foreground($color, $yes: $body-font-color, $no: $white, $threshold: 65%) {\r\n    @if lightness($color) > 90% {\r\n        @return $body-font-color;\r\n    }\r\n\r\n    @if lightness($color) > $threshold {\r\n        @return $yes;\r\n    }\r\n    @else {\r\n        @return $no;\r\n    }\r\n}\r\n\r\n//tint and shade over lighten and darken sass functions\r\n// http://www.sassmeister.com/gist/5df3b36554bbdc15ffbb\r\n\r\n/// Slightly lighten a color\r\n/// @access public\r\n/// @param {Color} $color - color to tint\r\n/// @param {Number} $percentage - percentage of `$color` in returned color\r\n/// @return {Color}\r\n@function tint($color, $percentage) {\r\n    @return mix(white, $color, $percentage);\r\n}\r\n\r\n/// Slightly darken a color\r\n/// @access public\r\n/// @param {Color} $color - color to shade\r\n/// @param {Number} $percentage - percentage of `$color` in returned color\r\n/// @return {Color}\r\n@function shade($color, $percentage) {\r\n    @return mix(black, $color, $percentage);\r\n}\r\n\r\n//hsb color function\r\n@function hsba($h, $s: 50, $b: 50, $a: 1) {\r\n    @if $b == 0 {\r\n        @return hsla(0, 0, 0, $a);\r\n    }\r\n    @else {\r\n        $l: $b / 2 * (2 - $s / 100);\r\n        $s: $b * $s / if($l < 50, $l * 2, 200 - $l * 2);\r\n\r\n        @return hsla($h, $s, $l, $a);\r\n    }\r\n}\r\n\r\n@function mix-brightness($color, $percentage: 0) {\r\n    @if $percentage >= 0 {\r\n        @return mix(white, $color, $percentage);\r\n    }\r\n\r\n    @if $percentage < 0 {\r\n        $percentage: $percentage * -1;\r\n\r\n        @return mix(black, $color, $percentage);\r\n    }\r\n}\r\n\r\n@function mix-saturation($color, $percentage: 0) {\r\n    @if $percentage >= 0 {\r\n        $saturated-color: hsba(hue($color), 100, 100);\r\n\r\n        @return mix($saturated-color, $color, $percentage);\r\n    }\r\n\r\n    @if $percentage < 0 {\r\n        $percentage: $percentage * -1;\r\n\r\n        @return mix(grey, $color, $percentage);\r\n    }\r\n}\r\n\r\n@function alpha-opacity($color, $percentage: 0) {\r\n    $percentage: 1 - $percentage;\r\n\r\n    @return transparentize($color, $percentage);\r\n}\r\n\r\n@function color($color, $s: 0, $b: 0, $a: 1) {\r\n    @if saturation($color) == 0 {\r\n        $s: 0;\r\n    }\r\n\r\n    $processed-saturation: mix-saturation($color, $s);\r\n    $processed-brightness: mix-brightness($processed-saturation, $b);\r\n\r\n    @return alpha-opacity($processed-brightness, $a);\r\n}\r\n\r\n// Color classes\r\n@each $name, $color in $demo-palette {\r\n    &.text-#{$name} {\r\n        $color: color($color, $b: 0);\r\n\r\n        color: $color;\r\n\r\n        a {\r\n            color: $color;\r\n        }\r\n    }\r\n\r\n    &.#{$name} {\r\n        $color: color($color, $b: 0);\r\n\r\n        @include background($color);\r\n    }\r\n}\r\n","// Internal map used for iterating through colors to generate CSS classes.\r\n$white: #ffffff;\r\n$black: #000000;\r\n$silver: #cacaca;\r\n\r\n$denim: #1779ba;\r\n$boulder: #767676;\r\n$dodger-blue: #00b5ff;\r\n$fuzzy-brown: #c54b4e;\r\n$shamrock: #3adb76;\r\n$yellow-sea: #ffae00;\r\n$mojo: #cc4b37;\r\n\r\n$primary: $denim;\r\n$secondary: $boulder;\r\n$alternate: $dodger-blue;\r\n$accent: $fuzzy-brown;\r\n$success: $shamrock;\r\n$warning: $yellow-sea;\r\n$alert: $mojo;\r\n\r\n$demo-palette: (\r\n    primary: $primary,\r\n\r\n    secondary: $secondary,\r\n\r\n    success: $success,\r\n\r\n    alert: $alert,\r\n\r\n    alternate: $alternate,\r\n\r\n    accent: $accent,\r\n\r\n    warning: $warning,\r\n\r\n    black: $black,\r\n    white: $white,\r\n    gray: $silver\r\n) !default;\r\n\r\n$body-font-color: rgba(0,0,0,.75) !default;\r\n"]}